// <auto-generated />
using System;
using APIWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APIWeb.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20201013022714_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APIWeb.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.Property<bool>("EhAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            Documento = "12345678900",
                            EhAtivo = true,
                            Nome = "JOSÉ"
                        },
                        new
                        {
                            IdCliente = 2,
                            Documento = "00987654321",
                            EhAtivo = true,
                            Nome = "MARIA"
                        },
                        new
                        {
                            IdCliente = 3,
                            Documento = "11223344556",
                            EhAtivo = true,
                            Nome = "PEDRO"
                        },
                        new
                        {
                            IdCliente = 4,
                            Documento = "67788990011",
                            EhAtivo = true,
                            Nome = "JOÃO"
                        });
                });

            modelBuilder.Entity("APIWeb.Models.Divida", b =>
                {
                    b.Property<int>("IdDivida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<int>("IdCliente")
                        .HasColumnName("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorOriginal")
                        .HasColumnType("decimal(14,2)");

                    b.HasKey("IdDivida");

                    b.HasIndex("IdCliente");

                    b.ToTable("Divida");

                    b.HasData(
                        new
                        {
                            IdDivida = 1,
                            DataVencimento = new DateTime(2020, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            QuantidadeParcela = 3,
                            ValorOriginal = 1500m
                        },
                        new
                        {
                            IdDivida = 2,
                            DataVencimento = new DateTime(2020, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            QuantidadeParcela = 4,
                            ValorOriginal = 8007m
                        },
                        new
                        {
                            IdDivida = 3,
                            DataVencimento = new DateTime(2020, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 3,
                            QuantidadeParcela = 5,
                            ValorOriginal = 7030m
                        },
                        new
                        {
                            IdDivida = 4,
                            DataVencimento = new DateTime(2020, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 4,
                            QuantidadeParcela = 5,
                            ValorOriginal = 6070m
                        },
                        new
                        {
                            IdDivida = 5,
                            DataVencimento = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 4,
                            QuantidadeParcela = 3,
                            ValorOriginal = 5021m
                        },
                        new
                        {
                            IdDivida = 6,
                            DataVencimento = new DateTime(2020, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 3,
                            QuantidadeParcela = 5,
                            ValorOriginal = 3702m
                        },
                        new
                        {
                            IdDivida = 7,
                            DataVencimento = new DateTime(2020, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 2,
                            QuantidadeParcela = 3,
                            ValorOriginal = 2204m
                        },
                        new
                        {
                            IdDivida = 8,
                            DataVencimento = new DateTime(2020, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCliente = 1,
                            QuantidadeParcela = 4,
                            ValorOriginal = 9050m
                        });
                });

            modelBuilder.Entity("APIWeb.Models.Parametro", b =>
                {
                    b.Property<int>("IdParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("PercentualComissao")
                        .HasColumnType("decimal(14,2)");

                    b.Property<decimal>("PercentualJuros")
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("QuantidadeParcelaMaxima")
                        .HasColumnType("int");

                    b.Property<int>("TipoJuros")
                        .HasColumnType("int");

                    b.HasKey("IdParametro");

                    b.ToTable("Parametro");

                    b.HasData(
                        new
                        {
                            IdParametro = 1,
                            PercentualComissao = 10m,
                            PercentualJuros = 0.2m,
                            QuantidadeParcelaMaxima = 5,
                            TipoJuros = 1
                        });
                });

            modelBuilder.Entity("APIWeb.Models.Divida", b =>
                {
                    b.HasOne("APIWeb.Models.Cliente", "Cliente")
                        .WithMany("Dividas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
